version: '3.3'

services:
  nginx:
      image: nginx:stable
      container_name: realtime-nginx
      ports:
        - "8080:8080"
        - "80:80"
        - "443:443"
      volumes:
        - ./nginx/conf/nginx.conf:/etc/nginx/conf.d/default.conf
        - ./nginx/logs:/var/log/nginx
        - ./static:/static
      depends_on:
        - backend
      command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
      restart: always
      env_file:
        - .env
  db:
      image: postgres:12-alpine
      container_name: realtime-db
      volumes:
        - project_db:/var/lib/postgresql/data
      restart: always
      ports:
        - 5432:5432
      env_file:
        - .env
  backend:
      build: .
      command: >
        sh -c "
               python3 manage.py migrate --noinput &&
               python3 manage.py start_service &&
               gunicorn -b 0.0.0.0:8000 core.wsgi --workers 12 --reload --timeout 0"
      container_name: realtime-backend
      env_file:
        - .env
      volumes:
        - ./app:/app
        - ./logs:/logs
        - ./static:/static
      ports:
        - 8000:8000
      restart: always
      depends_on:
        - db
  celery:
      build: .
      command: celery -A core worker -l INFO --statedb=worker.state --pool=gevent --concurrency=500
      container_name: realtime-worker
      env_file:
        - .env
      volumes:
        - ./app:/app
        - ./logs:/logs
        - ./static:/static
      restart: always
  celery_beat:
      build: .
      command: celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
      container_name: realtime-beat
      env_file:
        - .env
      volumes:
        - ./app:/app
        - ./logs:/logs
        - ./static:/static
      restart: always
  rabbitmq:
      image: rabbitmq:3.9.11-alpine
      container_name: realtime-rabbitmq
      restart: always
      env_file:
        - .env
  ui:
    build: ./node
    container_name: realtime-ui
    env_file:
      - .env
    restart: always
    ports:
      - "7070:8080"


volumes:
    project_db:
